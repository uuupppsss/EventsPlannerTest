	
	*EventsController*

	[HttpGet("GetEventsList")]
Запрос на получение списка мероприятий.
Принимает 2 параметра: DateTime date и string Type.
Возвращает отфильтрованный список мероприятий если параметры не нулевые и список всех мероприятий в
противном случае.
Параметр ответа: List<Event> 

	[HttpPost(AddEvent)]
Запрос на добавление нового мероприятия.
Принимает параметр: объект Event
Добавляет полученный объект в бд.
Ничего не возвращает. Параметр ответа:200.

	[HttpPut ("UpdateEvent")]
Запрос на обновление мероприятия.
Принимает параметр: объект Event
Находит по значению Event.Id нужную запись и обновляет данные в ней.
Ничего не возвращает. Параметр ответа:200.

	[HttpDelete("RemoveEvent")]
Запрос на удаление выбранного мероприятия.
Принимает параметр int id.
Находит запись по значению Id и удаляет из бд.
Так же удаляет всех участников с этого мероприятия по значению Speaker.EventId.
Ничего не возвращает. Параметр ответа:200.

	*SpeakersController*

	[HttpGet("GetEventSpeackersList")]
Запрос на получение списка участников мероприятия.
Принимает параметр int event_id.
Возвращает список участников мероприятия, с полученнным параметром EventId.
Параметр ответа: List<Speacker>.

	[HttpPost("SetSpeakersToEvent")]
Запрос на добавление нового участника.
Принимает параметр: объект Speaker.
Добавляет полученный параметр в бд.
Ничего не возвращает.
Параметр ответа:200.

	[HttpDelete("UnsetSpeakersToEvent")]
Запрос на удаление участника с мероприятия.
Принимает параметр int id.
Находит запись по значению Id и удаляет из бд.
Ничего не возвращает. Параметр ответа:200.

	*EquipmentController*

	[HttpGet("GetEventEquipmentList")]
Запрос на получение списка оборудования для выбранного мероприятия.
Принимает параметр int event_id.
Находит список броней оборудования для мероприятия List<EquipmentReservation>, 
с полученнным параметром EventId.
Преобразует его в список оборудования List<Equipment> по параметру EquipmentId.
Параметр ответа: List<Equipment>.

	
